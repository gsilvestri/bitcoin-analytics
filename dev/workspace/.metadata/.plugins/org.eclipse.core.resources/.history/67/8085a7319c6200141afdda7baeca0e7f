package com.gconsulting.webapp.action;

import java.io.Serializable;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.gconsulting.model.API;
import com.gconsulting.model.Exchange;
import com.gconsulting.service.ExchangeManager;

@SuppressWarnings("unchecked")
@Scope("request")
@Component("apisAction")
public class APIsAction extends BasePage implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7276861502829761813L;
	private ExchangeManager exchangeManager;
	private API selectedAPI = new API();
	private String exchangeCode;
	private String typeType;
	private String typeMarketCode;

	@Autowired
	public void setExchangeManager(
			@Qualifier("exchangeManager") ExchangeManager exchangeManager) {
		this.exchangeManager = exchangeManager;
	}

	public APIsAction() {
		setSortColumn("exchange.code"); // sets the default sort column
//		isUpdate = false;
	}

	public List<API> getAPIs() {
		return sort(exchangeManager.getAllApi());
	}

	public API getSelectedAPI() {
		return selectedAPI;
	}

	public void setSelectedAPI(API selectedAPI) {
		this.selectedAPI = selectedAPI;
	}

	public String getExchangeCode() {
		return exchangeCode;
	}

	public void setExchangeCode(String exchangeCode) {
		this.exchangeCode = exchangeCode;
	}

	public String delete() {

		exchangeManager.delete(selectedAPI);
		addMessage("exchanges.deleted");
		return "list";
	}

	public String edit() {

		if (exchangeCode == null) {
			exchangeCode = new String(getParameter("code"));
		}
		selectedAPI = exchangeManager.getExchangeByCode(exchangeCode);
//		isUpdate = true;
//		getRequest().setAttribute("isUpdate", isUpdate);
		return "edit";
	}

	public String save() {

		String key = new String("");
		boolean isUpdate = (exchangeManager.getExchangeByCode(selectedAPI.getCode()) == null) ? false : true; 
//		isUpdate = (Boolean) getRequest().getAttribute("isUpdate");
		if(!isUpdate) {
			exchangeManager.create(selectedAPI);
			key = "exchanges.added";
		} else {
			exchangeManager.update(selectedAPI);
			key = "exchanges.updated";			
		}
		addMessage(key);
//		if(!isUpdate) {
//			return "edit";			
//		} else {
			return "list";			
//		}
	}
}
