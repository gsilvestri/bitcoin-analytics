package com.gconsulting.webapp.action;

import java.io.Serializable;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.gconsulting.model.FeeApiType;
import com.gconsulting.model.Market;
import com.gconsulting.service.ExchangeManager;

@SuppressWarnings("unchecked")
@Scope("request")
@Component("typeAction")
public class TypesAction extends BasePage implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -477879875905469677L;
	private ExchangeManager exchangeManager;
	private FeeApiType selectedType = new FeeApiType();
	private String marketCode;
	private String type;

	@Autowired
	public void setExchangeManager(
			@Qualifier("exchangeManager") ExchangeManager exchangeManager) {
		this.exchangeManager = exchangeManager;
	}

	public TypesAction() {
		setSortColumn("code"); // sets the default sort column
	}

	public List<FeeApiType> getTypes() {
		return sort(exchangeManager.getAllType());
	}

	public FeeApiType getSelectedType() {
		return selectedType;
	}

	public void setSelectedType(FeeApiType selectedType) {
		this.selectedType = selectedType;
	}

	public String getMarketCode() {
		return marketCode;
	}

	public void setMarketCode(String marketCode) {
		this.marketCode = marketCode;
	}

	public String delete() {

		exchangeManager.delete(selectedType);
		addMessage("markets.deleted");
		return "list";
	}

	public String edit() {

		if (marketCode == null) {
			marketCode = new String(getParameter("code"));
		}
		selectedType = exchangeManager.getMarketByCode(marketCode);
		return "edit";
	}

	public String save() {

		String key = new String("");
		boolean isUpdate = (exchangeManager.getMarketByCode(selectedType.getCode()) == null) ? false : true; 
		if(!isUpdate) {
			exchangeManager.create(selectedType);
			key = "markets.added";
		} else {
			exchangeManager.update(selectedType);
			key = "markets.updated";			
		}
		addMessage(key);
			return "list";			
	}
}
