package com.gconsulting.webapp.action;

import com.gconsulting.model.Exchange;
import com.gconsulting.service.ExchangeManager;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class AddExchangeTest  extends BasePageTestCase {

    private ExchangesAction bean;
    @Autowired @Qualifier("exchangeManager")
    private ExchangeManager exchangeManager;
    
    @Override
    @Before
    public void onSetUp() {

    	super.onSetUp();
        bean = new ExchangesAction();
        bean.setExchangeManager(exchangeManager);
    }
    
	    @Override
	    @After
	    public void onTearDown() {
	        super.onTearDown();
	        bean = null;
	    }
	 
	    @Test
	    public void testAdd() throws Exception {
	        Person person = new Person();
	        // set required fields
	        person.setFirstName("firstName");
	        person.setLastName("lastName");
	        bean.setPerson(person);
	 
	        assertEquals("list", bean.save());
	        assertFalse(bean.hasErrors());
	    }
	 
	    @Test
	    public void testEdit() throws Exception {
	        log.debug("testing edit...");
	        bean.setId(1L);
	 
	        assertEquals("edit", bean.edit());
	        assertNotNull(bean.getPerson());
	        assertFalse(bean.hasErrors());
	    }
	 
	    @Test
	    public void testSave() {
	        bean.setId(1L);
	 
	        assertEquals("edit", bean.edit());
	        assertNotNull(bean.getPerson());
	        Person person = bean.getPerson();
	 
	        // update fields
	        person.setFirstName("firstName");
	        person.setLastName("lastName");
	        bean.setPerson(person);
	 
	        assertEquals("edit", bean.save());
	        assertFalse(bean.hasErrors());
	    }
	 
	    @Test
	    public void testRemove() throws Exception {
	        Person person = new Person();
	        person.setId(2L);
	        bean.setPerson(person);
	 
	        assertEquals("list", bean.delete());
	        assertFalse(bean.hasErrors());
	    }
}
